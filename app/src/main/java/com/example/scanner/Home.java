package com.example.scanner;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import com.google.zxing.integration.android.IntentIntegrator;
import com.google.zxing.integration.android.IntentResult;

import java.util.Calendar;
import java.util.Date;

import static java.lang.Integer.parseInt;

public class Home extends AppCompatActivity {
    public static String[] barcodes1 = Barcodes1.getBarcodes();
    public static String[] barcodes2 = Barcodes2.getBarcodes();

    // get current time with Calendar library
    static Date currentTime = Calendar.getInstance().getTime();
    // set up variables
    public static String date = currentTime.toString();
    public static int scanCount = 0;    // count the number of barcodes scanned
    public static double PRICE = 0.1;   // constant price per bottle
    public static double total = scanCount * PRICE; // formula to calculate the total price
    // string information
    public static String customerName = "";
    public static String employeeName = "";
    public static String emailAddress = "";
//    new data after removing duplicates around 10000 data (barcodes)
    public static String[] barcodes = {};
    // set up variables for input and display
    Button scanButton;  // button on the mobile screen
    Button emailButton; // button on the mobile screen
    Button clearButton; // button on the mobile screen
    TextView dateLabel; // the place where date appears on the screen
    TextView itemsScannedLabel; // place to put scanCount on the mobile screen
    TextView totalEarnedLabel;  // place to put total price on the mobile screen
    EditText customerNameEditText;  // place where customer name can be edited
    EditText employeeNameEditText;  // place where employee name can be edited
    EditText emailEditText;         // place where we can input the email address

    @Override
    // method that runs on start or on create of the activity, this is where it begins
    protected void onCreate(Bundle savedInstanceState) {
        // default function
        super.onCreate(savedInstanceState);
        // set the layout of the Home page
        setContentView(R.layout.activity_home);

        // set up text view label
        dateLabel = findViewById(R.id.dateLabel);       // find the date lable on the screen
        dateLabel.setText(date);                        // put the date value on the found lable on the screen
        itemsScannedLabel = findViewById(R.id.itemsScannedLabel);
        itemsScannedLabel.setText(String.valueOf(scanCount));
        totalEarnedLabel = findViewById(R.id.totalEarnedLabel);
        totalEarnedLabel.setText(String.format("$ %.2f", total));
        // edit text
        emailEditText = findViewById(R.id.editTextEmailAddress);
        emailEditText.setText(emailAddress);
        customerNameEditText = findViewById(R.id.editTextCustomerName);
        customerNameEditText.setText(customerName);
        employeeNameEditText = findViewById(R.id.editTextEmployeeName);
        employeeNameEditText.setText(employeeName);
        // set up buttons to call their respective on click functions
        scanButton = findViewById(R.id.scanButton);
        scanButton.setOnClickListener(this::onClickScan);
        emailButton = findViewById(R.id.emailButton);
        emailButton.setOnClickListener(this::onClickEmail);
        clearButton = findViewById(R.id.clearButton);
        clearButton.setOnClickListener(this::onClickClear);
    }

    // set up scan function so it calls the actual function that scans the barcode
    public void onClickScan(View v) {
        scanCode();
    }

    public void onClickEmail(View v) {
        sendEmail();
    }

    public void onClickClear(View v) {
        clear();
    }

    // clears all the data given by the user
    private void clear() {
        customerName = "";
        employeeName = "";
        emailAddress = "";
        // clear all the values
        dateLabel.setText(Calendar.getInstance().getTime().toString());
        customerNameEditText.setText("");
        employeeNameEditText.setText("");
        scanCount = 0;
        total = PRICE * scanCount;
        emailEditText.setText("");

        // we can't count any more bottles, go back to home, toast a warning to close out
        Intent backToHome = new Intent(Home.this, Home.class);
        Home.this.startActivity(backToHome);
        Home.this.finish();
        // if nothing has been scanned, and user goes back
        Toast.makeText(this, "Cleared all data!", Toast.LENGTH_LONG).show();
    }

    // this method will take user to the CaptureAct view and let them scan the barcode
    private void scanCode() {
        IntentIntegrator integrator = new IntentIntegrator(this);
        integrator.setCaptureActivity(CaptureAct.class);
        integrator.setOrientationLocked(false);
        integrator.setDesiredBarcodeFormats(IntentIntegrator.ALL_CODE_TYPES);
        // display how many bottles have been scanned so far
        integrator.setPrompt("Total items scanned: "+scanCount);
        integrator.initiateScan();
    }

    // this method will let the user send email to a provided email address
    private void sendEmail() {
        // if we are sending email, check if the email to send is provided
        if (scanCount == 0) {
            // if null send a error message
            Toast.makeText(Home.this, "Nothing scanned to pay!", Toast.LENGTH_SHORT).show();
        } else if (customerNameEditText.getText().toString().equals("")) {
            // if null send a error message
            Toast.makeText(Home.this, "Empty customer name provided.", Toast.LENGTH_SHORT).show();
        } else if (employeeNameEditText.getText().toString().equals("")) {
            // if null send a error message
            Toast.makeText(Home.this, "Empty employee name provided.", Toast.LENGTH_SHORT).show();
        } else if (emailEditText.getText().toString().equals("")) {
            // if null send a error message
            Toast.makeText(Home.this, "Empty email provided.", Toast.LENGTH_SHORT).show();
        } else {
            String to = emailEditText.getText().toString();
            String subject="Ashfield North News - Total Returned";
            String message="Receipt time: " + date;
            message += "\n\nCustomer Name: " + customerNameEditText.getText().toString();
            message += "\nEmployee Name: " + employeeNameEditText.getText().toString();
            message += "\nItems Scanned: " + scanCount;
            message += "\nTotal Earned: $" + total;
            message += "\n\nPlease pay the customer $"+total+" with a smile!";

            // this will open email provider
            Intent email = new Intent(Intent.ACTION_SEND);
            email.putExtra(Intent.EXTRA_EMAIL, new String[]{ to });
            email.putExtra(Intent.EXTRA_SUBJECT, subject);
            email.putExtra(Intent.EXTRA_TEXT, message);

            //need this to prompts email client only
            email.setType("message/rfc822");

            startActivity(Intent.createChooser(email, "Choose an Email client :"));
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        // get the values of what we scanned, mainly the barcode
        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
        // if we scanned something and have a result
        if (result != null) {
            // if the result's content is not null and we have a barcode
            if (result.getContents() != null) {
                // we have a scanned item, we need to see if this barcode we got is eligible for return
                Log.d("Received Barcode: ", result.getContents());
                // get the barcode we scanned
                String receivedBarcode = result.getContents();
                // set a flag variable to be true
                boolean flag = true;
                // go through all the barcodes, we have 3 different arrays for barcodes - barcodes, barcodes1, barcodes2
                for (int idx = 0; idx < barcodes.length; idx++) {
                    if (receivedBarcode.equals(barcodes[idx])) {
                        flag = false;
                        break;
                    }
                }
                if (flag) {
                    // go through all the barcodes
                    for (int idx = 0; idx < barcodes1.length; idx++) {
                        if (receivedBarcode.equals(barcodes1[idx])) {
                            flag = false;
                            break;
                        }
                    }
                }
                if (flag) {
                    // go through all the barcodes
                    for (int idx = 0; idx < barcodes2.length; idx++) {
                        if (receivedBarcode.equals(barcodes2[idx])) {
                            flag = false;
                            break;
                        }
                    }
                }

                // if flag is true, barcode is not eligible
                if (flag) {
                    // see how many we have counted
                    // setting these variables up will also help us retain all the information which can be lost
//                    scanCount = parseInt(itemsScannedLabel.getText().toString());
//                    total = parseInt(totalEarnedLabel.getText().toString());
                    emailAddress = emailEditText.getText().toString();
                    customerName = customerNameEditText.getText().toString();
                    employeeName = employeeNameEditText.getText().toString();
                    // show a alert to the user saying this was already scanned
                    AlertDialog.Builder builder = new AlertDialog.Builder(this);
                    builder.setTitle("Barcode not Eligible!");
                    builder.setMessage("Barcode is not eligible for return. Barcode: " + receivedBarcode);
                    builder.setPositiveButton("Scan Again", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            // user want's to scan again
                            scanCode();
                        }
                    }).setNegativeButton("Done", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            // user is done
                            Intent backToHome = new Intent(Home.this, Home.class);
                            Home.this.startActivity(backToHome);
                            Home.this.finish();
                        }
                    });
                    AlertDialog dialog = builder.create();
                    dialog.show();
                }
                // if flag is false, we found the correct barcode and it's eligible
                else {
                    // see how many we have counted
                    // setting these variables up will also help us retain all the information which can be lost
                    scanCount++;
                    total = scanCount * PRICE;
                    emailAddress = emailEditText.getText().toString();
                    customerName = customerNameEditText.getText().toString();
                    employeeName = employeeNameEditText.getText().toString();
                    // show a alert to see if the user want's to continue or is done
                    AlertDialog.Builder builder = new AlertDialog.Builder(this);
                    builder.setTitle("Continue scanning?");
                    builder.setMessage("Barcode scanned successfully." + receivedBarcode);
                    builder.setPositiveButton("Scan Again", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            // user want's to scan again
                            scanCode();
                        }
                    }).setNegativeButton("Done", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            // user is done
                            Intent backToHome = new Intent(Home.this, Home.class);
                            Home.this.startActivity(backToHome);
                            Home.this.finish();
                        }
                    });
                    AlertDialog dialog = builder.create();
                    dialog.show();
                }
            } else {
                // if nothing has been scanned, and user goes back
                if (scanCount == 0)
                    Toast.makeText(this, "No Results!", Toast.LENGTH_LONG).show();
            }
        } else {
            super.onActivityResult(requestCode, resultCode, data);
        }
    }
}
